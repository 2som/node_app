{"version":3,"sources":["UsersComponent.js","App.js","reportWebVitals.js","index.js"],"names":["UsersComponent","props","handleInputChange","value","target","clearTimeout","timer","setState","enteredInputPhrase","setTimeout","filterUsersByName","name","displayedUserData","state","filter","user","includes","handleKeyDown","keyCode","getAverageUsersAge","averageAge","reduce","acc","next","age","length","getAdminUsers","isAdmin","fetchUsersData","usersData","columns","title","dataIndex","key","render","isadmin","this","prevProps","justify","span","dataSource","pagination","style","marginBottom","Paragraph","onChange","e","onKeyDown","onClick","Title","toFixed","Component","App","error","axios","get","then","res","data","catch","err","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2268f48f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Table, Col, Row, Button, Space, Divider, Typography, Input } from 'antd';\r\n\r\nexport default class UsersComponent extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            displayedUserData: [],\r\n            averageAge: null,\r\n            enteredInputPhrase: '',\r\n        }\r\n    }    \r\n\r\n    componentDidMount() {\r\n        this.fetchUsersData();\r\n        this.timer = null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.usersData !== this.props.usersData) {\r\n          this.fetchUsersData();\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <Row justify=\"center\">\r\n            <Divider />\r\n            <Col span={8}>\r\n                <Table dataSource={this.state.displayedUserData} columns={this.columns} pagination={false}/>    \r\n                <Space style={{ marginBottom: 16 }}>\r\n                    <Typography.Paragraph>Filter By name</Typography.Paragraph>\r\n                    <Input value={this.state.enteredInputPhrase} \r\n                            onChange={(e) => this.handleInputChange(e)} \r\n                            onKeyDown={(e) => this.handleKeyDown(e)}/>\r\n                    <Button onClick={this.getAverageUsersAge}> Get Average Age</Button>\r\n                    <Button onClick={this.getAdminUsers}>Show Admins</Button>\r\n                    <Button onClick={this.fetchUsersData}>Clear</Button>\r\n                </Space>\r\n                <Row>\r\n                    {this.state.averageAge && <Typography.Title>Average age: {this.state.averageAge.toFixed(2)}</Typography.Title>}\r\n                </Row>        \r\n            </Col>\r\n            </Row>\r\n        )\r\n    }\r\n\r\n    handleInputChange = ({ target: {value} }) => {\r\n        clearTimeout(this.timer);\r\n        this.setState({ enteredInputPhrase: value });\r\n        this.timer = setTimeout(() => this.filterUsersByName(value), 500);\r\n    }\r\n\r\n    filterUsersByName = (name) => {\r\n        const { displayedUserData } = this.state;\r\n        this.setState({ displayedUserData: displayedUserData.filter(user => user.name.includes(name)) }); \r\n    }\r\n\r\n    handleKeyDown = ({ keyCode }) => {\r\n        const { enteredInputPhrase } = this.state;\r\n        if(keyCode === 13) {\r\n            clearTimeout(this.timer);\r\n            this.filterUsersByName(enteredInputPhrase);\r\n        }\r\n    }\r\n\r\n    getAverageUsersAge = () => {\r\n        const { displayedUserData } = this.state;\r\n        this.setState({ averageAge: displayedUserData.reduce((acc, next) => acc += next.age, 0) / displayedUserData.length});\r\n    }\r\n\r\n    getAdminUsers = () => {\r\n        const { displayedUserData } = this.state;\r\n        this.setState({ displayedUserData: displayedUserData.filter(user => user.isAdmin) }); \r\n    }\r\n\r\n    fetchUsersData = () => {\r\n        this.setState({ displayedUserData: this.props.usersData });\r\n    }\r\n\r\n    columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            key: 'id'\r\n        },\r\n        {\r\n            title: 'Age',\r\n            dataIndex: 'age',\r\n            key: 'id'\r\n        },\r\n        {\r\n            title: 'Admin',\r\n            dataIndex: 'isadmin',\r\n            key: 'id',\r\n            render: isadmin => isadmin ? \"Yes\" : \"No\"\r\n        }\r\n    ]\r\n}","import React, { Component } from 'react'\nimport 'antd/dist/antd.css';\nimport axios from 'axios';\nimport UsersComponent from './UsersComponent';\n\nclass App extends Component {\n\n  constructor () {\n      super()\n\n      this.state = {\n          usersData: [],\n          error: null\n      }\n  }\n\n  componentDidMount() {\n      axios\n          .get('http://localhost:3000/api/users')\n          .then(res => res.data)\n          .then(data => this.setState({ usersData: data }))\n          .catch(err => this.setState({ error: err }));\n  }\n\n  render () {\n      return (\n        <>\n          <UsersComponent usersData={this.state.usersData}/>\n          {this.state.error && <p>Something went wrong</p>}\n        </>\n      )\n  } \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}